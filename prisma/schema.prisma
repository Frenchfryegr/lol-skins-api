generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  username  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("Users")
}

model Champion {
  id              Int      @id
  name            String
  alias           String
  title           String
  shortBio        String?
  roles           String[]
  tacticalInfo    Json?
  playstyleInfo   Json?
  championTagInfo Json?
  assets          Json?
  passive         Json?
  spells          Json?
  skins           Skin[]
}

model Skin {
  id                           Int        @id
  championId                   Int
  contentId                    String?
  isBase                       Boolean
  name                         String
  skinClassification           String?
  rarity                       String?
  isLegacy                     Boolean?
  splashPath                   String?
  uncenteredSplashPath         String?
  tilePath                     String?
  loadScreenPath               String?
  loadScreenVintagePath        String?
  skinType                     String?
  splashVideoPath              String?
  previewVideoUrl              String?
  collectionSplashVideoPath    String?
  collectionCardHoverVideoPath String?
  featuresText                 String?
  chromaPath                   String?
  emblems                      Json?
  regionRarityId               Int?
  rarityGemPath                String?
  description                  String?
  chromas                      Chroma[]
  champion                     Champion   @relation(fields: [championId], references: [id])
  skinLines                    SkinLine[] @relation("SkinToSkinLine")
}

model Chroma {
  id                 Int      @id
  skinId             Int
  name               String?
  contentId          String?
  skinClassification String?
  chromaPath         String?
  tilePath           String?
  colors             String[]
  descriptions       Json?
  description        String?
  rarities           Json?
  skin               Skin     @relation(fields: [skinId], references: [id])
}

model SkinLine {
  id          Int     @id
  name        String?
  description String?
  skins       Skin[]  @relation("SkinToSkinLine")
}
